{"author":"Author Here","title":"MetaCoin Interface","fileName":"contracts/MetaCoin.sol","name":"MetaCoin","abi":[{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalanceInEth","outputs":[{"name":"value","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"sendCoin","outputs":[{"name":"sufficient","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalance","outputs":[{"name":"value","type":"uint256"}],"payable":false,"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"Transfer","type":"event"}],"bin":"60606040525b612710600060005060003273ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055505b6102f98061004a6000396000f360606040526000357c0100000000000000000000000000000000000000000000000000000000900480637bd703e81461005257806390b98a1114610083578063f8b2cb4f146100bf5761004d565b610002565b346100025761006d60048080359060200190919050506100f0565b6040518082815260200191505060405180910390f35b34610002576100a7600480803590602001909190803590602001909190505061018d565b60405180821515815260200191505060405180910390f35b34610002576100da60048080359060200190919050506102bb565b6040518082815260200191505060405180910390f35b600073__ConvertLib____________________________6396e4ee3d610115846102bb565b6002600060405160200152604051837c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b156100025760325a03f41561000257505050604051805190602001509050610188565b919050565b600081600060005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505410156101cf57600090506102b5565b81600060005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282825054039250508190555081600060005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828282505401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506102b5565b92915050565b6000600060005060008373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505490506102f4565b91905056","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE JUMPDEST PUSH2 0x2710 PUSH1 0x0 PUSH1 0x0 POP PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SHA3 PUSH1 0x0 POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2F9 DUP1 PUSH2 0x4A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x7BD703E8 EQ PUSH2 0x52 JUMPI DUP1 PUSH4 0x90B98A11 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0xBF JUMPI PUSH2 0x4D JUMP JUMPDEST PUSH2 0x2 JUMP JUMPDEST CALLVALUE PUSH2 0x2 JUMPI PUSH2 0x6D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2 JUMPI PUSH2 0xA7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2 JUMPI PUSH2 0xDA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x96E4EE3D PUSH2 0x115 DUP5 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO PUSH2 0x2 JUMPI PUSH1 0x32 GAS SUB DELEGATECALL ISZERO PUSH2 0x2 JUMPI POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD POP SWAP1 POP PUSH2 0x188 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH1 0x0 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SHA3 PUSH1 0x0 POP SLOAD LT ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2B5 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x0 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SHA3 PUSH1 0x0 DUP3 DUP3 DUP3 POP SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 PUSH1 0x0 POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SHA3 PUSH1 0x0 DUP3 DUP3 DUP3 POP SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP PUSH2 0x2B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 PUSH1 0x0 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SHA3 PUSH1 0x0 POP SLOAD SWAP1 POP PUSH2 0x2F4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP ","source":"pragma solidity ^0.4.2;\n\nimport \"./ConvertLib.sol\";\n\n/**\n@title MetaCoin Interface\n@author Author Here\n@dev TODO update solidity compiler to add user/dev notes\n*/\ncontract MetaCoin {\n\n\t// TODO update solidity compiler to support variable definitions\n\tmapping (address => uint) balances;\n\n\t// TODO update solidity compiler to support events\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value);\n\n\t// TODO update solidity compiler to support constructor\n\tfunction MetaCoin() {\n\t\tbalances[tx.origin] = 10000;\n\t}\n\n\t/**\n\t@notice Transfer coins from sender to receiver\n\t@dev\n\t\tThis is just a simple example of a coin-like contract.\n\t\tIt is not standards compatible and cannot be expected to talk to other\n\t\tcoin/token contracts. If you want to create a standards-compliant\n\t\ttoken, see: [ConsenSys/Tokens](https://github.com/ConsenSys/Tokens). Cheers!\n\t@param receiver Address of the receipient\n\t@param amount Amount of tokens to send\n\t@return { \"sufficient\": \"Transfer is succesful\" }\n\t*/\n\tfunction sendCoin(address receiver, uint amount) returns (bool sufficient) {\n\t\tif (balances[msg.sender] < amount) return false;\n\t\tbalances[msg.sender] -= amount;\n\t\tbalances[receiver] += amount;\n\t\tTransfer(msg.sender, receiver, amount);\n\t\treturn true;\n\t}\n\n\t/**\n\t@notice Returns equivalent Ether balance for a given address\n\t@dev Uses the `ConvertLib.sol` library for conversions\n\t@param addr Queried address\n\t@return { \"value\" : \"Ether equivalent balance of account\" }\n\t*/\n\tfunction getBalanceInEth(address addr) returns(uint value){\n\t\treturn ConvertLib.convert(getBalance(addr),2);\n\t}\n\t/**\n\t@notice Returns MetaCoin balance for a given address\n\t@param addr Queried address\n\t@return { \"value\" : \"Token balance of account\" }\n\t*/\n\tfunction getBalance(address addr) returns(uint value) {\n\t\treturn balances[addr];\n\t}\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"addr","type":"address","description":"Queried address"}],"name":"getBalanceInEth","outputs":[{"name":"value","type":"uint256","description":"Ether equivalent balance of account"}],"payable":false,"type":"function","details":"Uses the `ConvertLib.sol` library for conversions","return":"{ \"value\" : \"Ether equivalent balance of account\" }","notice":"Returns equivalent Ether balance for a given address","signature":"getBalanceInEth(address)","signatureHash":"7bd703e8"},{"constant":false,"inputs":[{"name":"receiver","type":"address","description":"Address of the receipient"},{"name":"amount","type":"uint256","description":"Amount of tokens to send"}],"name":"sendCoin","outputs":[{"name":"sufficient","type":"bool","description":"Transfer is succesful"}],"payable":false,"type":"function","details":"This is just a simple example of a coin-like contract. It is not standards compatible and cannot be expected to talk to other coin/token contracts. If you want to create a standards-compliant token, see: [ConsenSys/Tokens](https://github.com/ConsenSys/Tokens). Cheers!","return":"{ \"sufficient\": \"Transfer is succesful\" }","notice":"Transfer coins from sender to receiver","signature":"sendCoin(address,uint256)","signatureHash":"90b98a11"},{"constant":false,"inputs":[{"name":"addr","type":"address","description":"Queried address"}],"name":"getBalance","outputs":[{"name":"value","type":"uint256","description":"Token balance of account"}],"payable":false,"type":"function","return":"{ \"value\" : \"Token balance of account\" }","notice":"Returns MetaCoin balance for a given address","signature":"getBalance(address)","signatureHash":"f8b2cb4f"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"Transfer","type":"event","signature":"Transfer(address,address,uint256)","signatureHash":"ddf252ad"}]}
